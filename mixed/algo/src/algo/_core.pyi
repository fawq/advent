class Edge:
    def __init__(self, from_: int, to: int) -> None: ...
    def reverse(self) -> Edge: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class GraphType:
    OneDirectional: GraphType
    BiDirectional: GraphType

class Graph:
    def __init__(self, graph_type: GraphType) -> None: ...
    def add_edge(self, edge: Edge) -> None: ...
    def add_edge_by_coordinates(self, from_: int, to: int) -> None: ...
    def get_nodes(self) -> set[int]: ...
    def get_edges(self) -> set[Edge]: ...
    def get_edges_from_node(self, node: int) -> set[Edge]: ...
    def get_edges_to_node(self, node: int) -> set[Edge]: ...
    def get_node_neighbours(self, node: int) -> set[int]: ...
    def is_node_exists(self, node: int) -> bool: ...
    def is_edge_exists(self, edge: Edge) -> bool: ...
    def is_edge_exists_by_coordinates(self, from_: int, to: int) -> bool: ...
    def remove_edge(self, edge: Edge) -> None: ...
    def remove_edge_by_coordinates(self, from_: int, to: int) -> None: ...
    def remove_node(self, node: int) -> None: ...
